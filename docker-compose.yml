version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sistema_postgres
    environment:
      POSTGRES_DB: sistema_db
      POSTGRES_USER: sistema_user
      POSTGRES_PASSWORD: sistema_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sistema_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sistema_user -d sistema_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sistema_backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=sistema_db
      - DB_USER=sistema_user
      - DB_PASSWORD=sistema_password
      - SERVER_PORT=8080
      - GIN_MODE=release
      - JWT_SECRET=your-super-secret-jwt-key-here
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sistema_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build:
      context: ./frontend-admin
      dockerfile: Dockerfile
    container_name: sistema_frontend
    environment:
      - BACKEND_URL=http://backend:8080
      - SERVER_PORT=3000
      - GIN_MODE=release
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - sistema_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sistema_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - sistema_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# Networks
networks:
  sistema_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  postgres_data: